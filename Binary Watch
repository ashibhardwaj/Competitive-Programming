class Solution {
public:
    const char* const hours[12] {
        "0:","1:","2:","3:","4:","5:","6:","7:","8:","9:","10:","11:"
    };
    const char* const minutes[60] {
        "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59"
    };
    vector<string> readBinaryWatch(int num) {
        vector<string> ans;
        if(num>8) return ans;
        ans.reserve(pow(2, num));
        for(int h=0; h<12; h++)
        {
            int hb=__builtin_popcount(h);//count set bits
            if(hb>num)
                continue;
            if(hb==num)
            {
                ans.push_back(hours[h]);
                ans.back()+="00";
                continue;
            }
            int remaining_bits = num-hb;
            for(int m=1; m<60; m++)
            {
                    int mb=__builtin_popcount(m);
                    if(mb==remaining_bits)
                    {
                        ans.push_back(hours[h]);
                        ans.back()+=minutes[m];
                    }
            }
        }
        return ans;
    }
};
